{"block":{"name":"text","text":"<h2>Обход в ширину</h2>\n\n<p style=\"text-align: center;\">Алгоритм обхода в ширину заключается в том, что мы проходим слева на право каждый уровень нашего дерева.<img alt=\"\" height=\"410\" src=\"https://ucarecdn.com/c0c1edfc-9ff2-448c-9dce-b90eeadb714b/\" width=\"950\"></p>\n\n<p>Прочитали все элементы дерева на текущем уровне слева на право -&gt; спустились на уровень ниже, прочитали -&gt; опять спустились и т.д.<br>\nДля реализации этого алгоритма на языке программирования, удобно использовать такую структуру данных как очередь:</p>\n\n<p><img alt=\"\" src=\"https://ucarecdn.com/98f6f2ee-5441-4f10-b4fd-236110a8d255/\"></p>\n\n<p>Примечание: на картинке операция dequeue() имеет вид dequeue(x), но на самом деле эта операция не принимает никаких аргументов, так было написано лишь затем, чтобы еще раз подчеркнуть какой именно элемент удаляется из очереди.</p>\n\n<p>Алгоритм обхода в ширину можно реализовывать на любом дереве, а не только на бинарном. В таком случае, каждая вершина должна хранить информацию о всех своих детях(к примеру массив).</p>","video":null,"options":{},"subtitle_files":[],"source":{},"subtitles":{},"tests_archive":null,"feedback_correct":"","feedback_wrong":""},"id":"1439225","has_review":false,"time":"2020-08-01T19:01:18.049Z"}