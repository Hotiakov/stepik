{"block":{"name":"text","text":"<p>Этот алгоритм позволяет найти кратчайшие расстояния от каждой вершины до каждой. Если в алгоритмах Дейкстры и Беллмана-Форда мы выбирали вершину и искали все расстояния относительно неё, то здесь мы ищем сразу для всех.<br>\n </p>\n\n<p>Давайте сразу посмотрим работу алгоритма на примере:<br>\nУ нас есть граф</p>\n\n<p style=\"text-align: center;\"><img alt=\"\" height=\"200\" src=\"https://ucarecdn.com/8f49b288-4bf5-4082-9249-2c8d0cdc8a92/\" width=\"250\"></p>\n\n<p>Представим его как матрицу смежности.</p>\n\n<p style=\"text-align: center;\"><img alt=\"\" src=\"https://ucarecdn.com/4823d105-6746-4f22-88de-028af646bf56/\" width=\"450\"></p>\n\n<p>Теперь перепишем эту матрицу сохраняя диагональные элементы, нулевую строку и нулевой столбец.<br>\nПустые элементы будем заполнять по правилу:</p>\n\n<pre><code class=\"language-no-highlight\">A^1[i,j] = min(A^0[i,j], A^0[i,0]+A^0[0,j])</code></pre>\n\n<p style=\"text-align: center;\"><img alt=\"\" height=\"580\" src=\"https://ucarecdn.com/48fad4f6-0c0e-45f8-9a05-400d6c9d04c2/\" width=\"700\"></p>\n\n<p style=\"text-align: center;\"><img alt=\"\" height=\"597\" src=\"https://ucarecdn.com/eac66749-fa31-4f6a-8e34-1e2b9274f764/\" width=\"700\"></p>\n\n<p style=\"text-align: center;\"><img alt=\"\" height=\"207\" src=\"https://ucarecdn.com/260cd43f-f636-4a2f-81a3-7d6fe69e04f5/\" width=\"700\"></p>","video":null,"options":{},"subtitle_files":[],"source":{},"subtitles":{},"tests_archive":null,"feedback_correct":"","feedback_wrong":""},"id":"1455186","has_review":false,"time":"2020-08-01T19:04:38.111Z"}